// Copyright (c) ZeroC, Inc.

module ZeroC::Slice::Tests

// Equivalent to a Result<string, int32>
compact enum StringInt32Result {
    Success(value: string)
    Failure(value: int32)
}

compact struct StringInt32ResultHolder {
    value: Result<string, int32>
}

// Equivalent to a Result<string, int32?>
compact enum StringOptInt32Result {
    Success(value: string)
    Failure(value: int32?)
}

compact struct StringOptInt32ResultHolder {
    value: Result<string, int32?>
}

// Just to test that the generated code compiles.
struct OptionalCollectionResults {
    r1: Result<string, Sequence<Dictionary<string, bool?>>>
    r2: Result<string, Sequence<Dictionary<string, bool>?>>
    r3: Result<string, Sequence<Dictionary<string, bool>>?>
    r4: Result<string, Sequence<Dictionary<string, bool>>>?

    r5: Result<string, Sequence<Dictionary<string, bool?>?>?>?

    r6: Result<Sequence<Dictionary<string, bool?>>, string>
    r7: Result<Sequence<Dictionary<string, bool>?>, string>
    r8: Result<Sequence<Dictionary<string, bool>>?, string>
    r9: Result<Sequence<Dictionary<string, bool>>, string>?

    r10: Result<Sequence<Dictionary<string, bool?>?>?, string>?
}
